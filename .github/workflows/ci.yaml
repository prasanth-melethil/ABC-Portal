name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - '*'
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
        
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run Linting
        run: pnpm lint

      # - name: Run Tests
      #   run: pnpm test

  cd:
    needs: ci
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
        
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run Linting
        run: pnpm lint

      # - name: Run Tests
      #   run: pnpm test

      # Authenticate with GCP
      # - name: Authenticate with GCP
      #   uses: google-github-actions/auth@v1
      #   with:
      #     credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Configure Docker to use gcloud as a credential helper
      # - name: Configure Docker for GCR
      #   run: gcloud auth configure-docker

      # Set the image tag using branch name and build number
      - name: Set image tag
        id: image_tag
        run: |
          BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/[^a-zA-Z0-9\-]/-/g')
          IMAGE_TAG="$BRANCH_NAME-${{ github.run_number }}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "Generated Image Tag: $IMAGE_TAG"

      # Build the Docker image
      # - name: Build Docker image
      #   run: |
      #     docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:$IMAGE_TAG .

      # Push the Docker image to GCR
      # - name: Push Docker image to GCR
      #   run: |
      #     docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:$IMAGE_TAG

      # - name: Install kubectl
      #   run: |
      #     curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      #     chmod +x kubectl
      #     sudo mv kubectl /usr/local/bin/

      # - name: Set Kubernetes Context
      #   uses: google-github-actions/get-gke-credentials@v1
      #   with:
      #     cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
      #     location: ${{ secrets.GKE_CLUSTER_LOCATION }}
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}

      # - name: Apply Kubernetes Manifests
      #   run: |
      #     kubectl apply -f ./kube/
